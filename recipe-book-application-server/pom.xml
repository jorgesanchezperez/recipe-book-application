<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <artifactId>recipe-book-application-server</artifactId>
    <name>recipe-book-application-server</name>
    <packaging>jar</packaging>
    <description>Application entry point module</description>

    <parent>
        <groupId>org.jsanchez</groupId>
        <artifactId>recipe-book-application</artifactId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>org.jsanchez</groupId>
            <artifactId>recipe-book-application-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jsanchez</groupId>
            <artifactId>recipe-book-application-error</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jsanchez</groupId>
            <artifactId>recipe-book-application-datamodel</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jsanchez</groupId>
            <artifactId>recipe-book-application-rules</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jsanchez</groupId>
            <artifactId>recipe-book-application-datamodel</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Maven Assembly Plugin -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <configuration>
                    <!-- get all project dependencies -->
                    <finalName>${project.build.finalName}</finalName>
                    <descriptorRefs>
                        <descriptorRef>
                            ${descriptorRef.value}
                        </descriptorRef>
                    </descriptorRefs>
                    <!-- MainClass in mainfest make a executable jar -->
                    <archive>
                        <manifest>
                            <mainClass>org.jsanchez.recipe.application.ApplicationEntryPoint</mainClass>
                        </manifest>
                    </archive>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <!-- bind to the packaging phase -->
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!-- https://dmp.fabric8.io/ -->
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <configuration>
                    <images>
                        <image>
                            <name>${project.artifactId}</name>
                            <build>
                                <dockerFile>${project.basedir}/docker/Dockerfile</dockerFile>
                                <contextDir>${project.basedir}</contextDir>
                                <args>
                                    <targetFile>target/${project.build.finalName}-${descriptorRef.value}.jar
                                    </targetFile>
                                </args>
                            </build>
                            <run>
                                <ports>
                                    <port>8080:8080</port>
                                </ports>
                                <wait>
                                    <!-- Check for this URL to return a 200 return code .... -->
                                    <url>http://localhost:8080/health</url>
                                    <time>120000</time>
                                </wait>
                            </run>
                        </image>
                    </images>
                </configuration>
                <!--
                    Connect start/stop to pre- and
                    post-integration-test phase, respectively if you want to start
                    your docker containers during integration tests
                 -->
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <!-- "build" should be used to create the images with the artifact -->
                            <goal>build</goal>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
